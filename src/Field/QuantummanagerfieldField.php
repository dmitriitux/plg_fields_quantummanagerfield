<?php

namespace Joomla\Plugin\Fields\QuantumManagerField\Field;

defined('_JEXEC') or die;

use Exception;
use Joomla\CMS\Factory;
use Joomla\CMS\Layout\FileLayout;
use Joomla\Component\QuantumManager\Administrator\Field\QuantumuploadField;
use Joomla\Component\QuantumManager\Administrator\Helper\QuantummanagerHelper;
use Joomla\Component\QuantumManager\Administrator\Field\QuantumcombineField;
use Joomla\Component\QuantumManager\Administrator\Helper\QuantummanagerLibsHelper;

/**
 * Class QuantummanagerfieldField
 */
class QuantummanagerfieldField extends QuantumuploadField
{

	/**
	 * @var string
	 */
	public $type = 'QuantumManagerField';

	public $render = '';

	protected $copy = true;

	public function getLabel()
	{
		return parent::getLabel(); // TODO: Change the autogenerated stub
	}

	protected function getLayoutData()
	{
		$layout     = new FileLayout('plugins.fields.quantummanagerfield.fields.quantummanagerfield');
		$parentData = parent::getLayoutData();

		if (isset($this->dropAreaHidden) && (int) $this->dropAreaHidden)
		{
			$parentData['cssClass'] .= ' quantumuploadimage-field-preview-hidden';
		}

		if (empty($this->render))
		{
			$this->render = $layout->render(array_merge($parentData, [
				'copy' => $this->copy
			]));
		}

		$other                  = $this->render;
		$parentData['cssClass'] .= ' quantumuploadimage-field';

		return array_merge($parentData,
			[
				'other' => $other,
			]
		);
	}

	public function getInput()
	{
		$db          = Factory::getDBO();
		$query       = $db->getQuery(true)
			->select($db->quoteName(array('params', 'fieldparams')))
			->from('#__fields')
			->where('name=' . $db->quote($this->fieldname));
		$field       = $db->setQuery($query)->loadObject();
		$fieldparams = json_decode($field->fieldparams, JSON_OBJECT_AS_ARRAY);

		try
		{
			$this->__set('dropAreaHidden', $this->getAttribute('dropAreaHidden', true));
			$this->__set('copy', $this->getAttribute('copy', true));
			$this->__set('path', $this->getAttribute('path', $fieldparams['path']));
			$this->__set('scope', $this->getAttribute('scope', $fieldparams['scope']));

			if ($this->copy)
			{
				QuantummanagerLibsHelper::includes([
					'utils',
					'notify',
					'clipboard'
				]);
			}

			return parent::getInput();
		}
		catch (Exception $e)
		{
			echo $e->getMessage();
		}
	}

}